{"mappings":"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","sources":["src/modules/mainpage.ts"],"sourcesContent":["//mainpage\r\n\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { getDatabase, ref, onValue, set, push, get, child } from 'firebase/database';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { firebaseConfig } from './firebase';\r\nimport { deleteUser } from './firebase';\r\nimport { signOut } from './firebase';\r\n\r\n\r\nconst myUpdateButton = document.querySelector('#my-update-btn');\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst db = getDatabase(firebaseApp);\r\nconst auth = getAuth(firebaseApp);\r\n\r\ninterface UserData {\r\n  name: string;\r\n  profilePicture: string;\r\n}\r\n\r\ninterface Post {\r\n  content: string;\r\n}\r\n\r\nconst main = () => {\r\n\r\n  onAuthStateChanged(auth, async (user) => {\r\n    console.log('auth state changed', user);\r\n    if (user) {\r\n      const userIdFromUrl = getUserIdFromUrl();\r\n\r\n      \r\n      const userId = userIdFromUrl ? userIdFromUrl : user.uid;\r\n      const db = getDatabase();\r\n      const userRef = ref(db, `users/${userId}`);\r\n\r\n      onValue(userRef, (snapshot) => {\r\n        const userData = snapshot.val();\r\n        console.log('userData', userData);\r\n        console.log(userData.profilePicture);\r\n        console.log(userData.username);\r\n        const username = document.querySelector('#username') as HTMLElement\r\n        const pic = document.querySelector('#pic') as HTMLImageElement\r\n        username.innerHTML = userData.username\r\n        pic.src = userData.profilePicture\r\n\r\n      })\r\n\r\n      displayUserPosts()\r\n\r\n\r\n      interface User {\r\n        username: string;\r\n        email: string;\r\n        profilePicture: string;\r\n      }\r\n      \r\n      \r\n        const database = getDatabase();\r\n        const usersRef = ref(database, 'users');\r\n        const usersSnapshot = await get(usersRef);\r\n        const usersData = usersSnapshot.val();\r\n        console.log(usersData)\r\n        const userContainer = document.querySelector(\"#user-container\") as HTMLElement\r\n      \r\n        (Object.entries(usersData) as [string, User][]).forEach(([userId, user]) => {\r\n          const typedUser = user as User;\r\n          console.log(typedUser.username);\r\n          const p = document.createElement('p')\r\n          p.setAttribute('data-user-id', userId);\r\n          p.innerHTML = typedUser.username\r\n          userContainer.append(p)\r\n\r\n          p.addEventListener('click', () => {\r\n            window.location.href = `./profile.html?userId=${userId}`;\r\n          });\r\n        })\r\n    }\r\n\r\n  })\r\n}\r\n//knappfunktion\r\nmyUpdateButton?.addEventListener('click', async (event) => {\r\n  event.preventDefault();\r\n\r\n  \r\n\r\n  createPost()\r\n})\r\n//Skapa inlägg\r\n\r\nconst createPost = () => {\r\n  const myUpdate = document.querySelector('#my-update') as HTMLInputElement\r\n  onAuthStateChanged(auth, async (user) => {\r\n    if (user) {\r\n      const productsRef = ref(db, 'users');\r\n      const productsSnapshot = await get(productsRef);\r\n      const users = productsSnapshot.val();\r\n      console.log(users)\r\n\r\n      const uid = user.uid\r\n      const userRef = ref(db, `posts/`);\r\n      const newPost = push(userRef)\r\n      \r\n      set(newPost, {\r\n        userId: uid,\r\n        content: myUpdate.value,\r\n\r\n\r\n      })\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.addEventListener('load', main);\r\n\r\n//visa inlägg\r\n\r\n\r\nconst displayUserPosts = () => {\r\n  const userIdFromUrl = getUserIdFromUrl();\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n  const usersRef = ref(db, 'users');\r\n\r\n  onValue(postsRef, async (snapshot) => {\r\n    const posts = snapshot.val();\r\n    const postContent = document.querySelector('.posts') as HTMLElement;\r\n    postContent.innerHTML = '';\r\n\r\n    for (const postId in posts) {\r\n      const post = posts[postId];\r\n\r\n      \r\n      if (userIdFromUrl && post.userId !== userIdFromUrl) {\r\n        continue;\r\n      }\r\n\r\n      const content = post.content;\r\n      const postUserId = post.userId;\r\n\r\n      const userSnapshot = await get(child(usersRef, postUserId));\r\n      const user = userSnapshot.val();\r\n\r\n      if (user) {\r\n        const postElement = document.createElement('div');\r\n        postElement.className = 'post-item';\r\n        postElement.innerHTML = `\r\n          <h3 class=\"postName\">${user.username}</h3>\r\n          <p class=\"postContent\">${content}</p>\r\n        `;\r\n\r\n        postContent.appendChild(postElement);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n\r\n//visa andra användare\r\n\r\n\r\n\r\n\r\nfunction getUserIdFromUrl() {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.get('userId');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//radera\r\nconst delButton = document.getElementById('delete') as HTMLElement\r\ndelButton.addEventListener('click', async () => {\r\n  try {\r\n    await deleteUser().then(() => {\r\n      window.location.assign('../index.html');\r\n    })\r\n    \r\n  } catch (error) {\r\n    console.error('Error deleting user and data:', error);\r\n  }\r\n});\r\n\r\n//logga ut\r\nconst logOutBtn = document.getElementById('logOut') as HTMLElement;\r\nlogOutBtn.addEventListener('click', async () => {\r\n  await signOut().then(() => {\r\n    window.location.assign('../index.html');\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["$6AR8M","parcelRequire","$26e40e4babb8c21b$var$myUpdateButton","document","querySelector","$26e40e4babb8c21b$var$firebaseApp","$fhN3L","initializeApp","$k8Jq9","firebaseConfig","$26e40e4babb8c21b$var$db","$gdelx","getDatabase","$26e40e4babb8c21b$var$auth","getAuth","addEventListener","async","event","preventDefault","$26e40e4babb8c21b$var$createPost","myUpdate","onAuthStateChanged","user","productsRef","ref","users","get","val","console","log","uid","userRef","newPost","push","set","userId","content","value","window","userIdFromUrl","$26e40e4babb8c21b$var$getUserIdFromUrl","db","onValue","snapshot","userData","profilePicture","username","pic","innerHTML","src","$26e40e4babb8c21b$var$displayUserPosts","database","usersRef","usersData","userContainer","Object","entries","forEach","typedUser","p","createElement","setAttribute","append","location","href","postsRef","posts","postContent","postId","post","postUserId","child","postElement","className","appendChild","URLSearchParams","search","getElementById","deleteUser","then","assign","error","signOut"],"version":3,"file":"mainpage.7f64ce5f.js.map"}